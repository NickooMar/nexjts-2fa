services:
  main-service:
    container_name: nestjs-main-service
    build:
      context: .
      dockerfile: apps/main/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_SECRET_EXPIRES_IN=${JWT_SECRET_EXPIRES_IN}
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - auth-service
      - user-service
    networks:
      - app-network

  auth-service:
    container_name: nestjs-auth-service
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_SECRET_EXPIRES_IN=${JWT_SECRET_EXPIRES_IN}
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - user-service
    networks:
      - app-network

  user-service:
    container_name: nestjs-user-service
    build:
      context: .
      dockerfile: apps/user/Dockerfile
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_SECRET_EXPIRES_IN=${JWT_SECRET_EXPIRES_IN}
      - MONGO_URI=${MONGO_URI}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge